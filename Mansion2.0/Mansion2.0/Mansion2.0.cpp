#include <iostream>
#include <conio.h>
#include "map.h"
#include <stdlib.h>

#define StartLevel 3


int enex = 5;
int eney = 5;
int enex2 = 8;
int eney2 = 4;
int enemMOV2;
char input;
int level;
bool win = true;

int map[12][12] = {
{1,1,1,1,1,1,1,1,1,1,1,1},
{1,8,0,0,1,1,0,0,0,0,0,1},
{1,1,1,0,1,2,0,1,0,1,0,1},
{1,0,1,0,0,1,0,0,0,1,0,1},
{1,0,1,0,0,0,1,1,1,0,0,1},
{1,0,1,1,1,0,0,0,1,0,1,1},
{1,0,0,0,1,1,1,0,1,0,0,1},
{1,0,1,0,1,0,1,0,1,1,0,1},
{1,0,1,0,0,0,0,0,0,0,0,1},
{1,0,1,0,1,1,1,1,1,1,0,1},
{1,2,1,0,0,0,0,0,0,0,0,1},
{1,1,1,1,1,1,1,1,1,1,1,1},
};

int map2[18][12] = {
{1,1,1,1,1,1,1,1,1,1,1,1},
{1,8,0,0,0,0,0,0,0,0,0,1},
{1,1,1,0,1,1,1,0,1,1,0,1},
{1,0,1,0,0,0,1,0,1,1,0,1},
{1,0,1,0,0,0,1,0,0,0,0,1},
{1,0,0,0,0,0,1,0,1,0,1,1},
{1,1,1,1,1,0,1,0,1,6,1,1},
{1,5,0,0,1,0,1,0,1,1,0,1},
{1,1,1,0,1,0,1,0,0,1,0,1},
{1,2,1,0,1,0,0,0,0,1,0,1},
{1,1,1,0,0,0,1,0,0,1,0,1},
{1,1,1,1,0,1,1,0,1,1,0,1},
{1,0,0,0,0,1,0,0,0,0,0,1},
{1,0,1,1,1,1,0,1,1,1,0,1},
{1,0,1,0,0,0,0,1,2,1,0,1},
{1,1,1,1,1,1,0,1,1,1,0,1},
{1,2,1,4,0,0,0,1,0,0,0,1},
{1,1,1,1,1,1,1,1,1,1,1,1},

};

int map3[12][27] = {
	{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
	{1,8,0,0,1,1,2,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1},
	{1,1,1,0,0,0,1,1,1,2,0,0,0,1,1,0,0,0,1,0,0,0,0,1,0,0,1},
	{1,1,1,0,1,0,0,0,1,0,1,0,0,1,1,1,1,1,1,0,0,1,0,1,1,0,1},
	{1,0,0,0,1,0,0,0,1,1,1,1,1,1,2,0,1,1,0,0,0,0,0,1,0,0,1},
	{1,1,1,1,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,2,1},
	{1,0,1,0,0,0,1,0,1,0,0,0,0,1,0,0,1,0,0,0,1,0,1,1,1,1,1},
	{1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,1,1,0,1,0,1,1,2,0,1},
	{1,2,0,0,1,2,1,0,0,0,0,0,1,0,1,0,0,0,0,0,1,2,0,0,0,0,1},
	{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
};

int map4[30][30]{
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1},
{1,8,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,9,0,0,0,1,0,0,0,0,0,0,0,1},
{1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1},
{1,1,1,1,1,0,0,0,0,1,0,0,2,0,1,0,0,1,0,0,0,0,0,1,0,1,0,0,0,1},
{1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,1,0,1,1,1},
{1,0,9,0,0,0,0,0,0,1,0,0,0,1,0,0,1,1,1,0,0,0,0,0,0,0,1,0,0,1},
{1,0,0,0,0,1,0,0,0,1,0,1,1,0,0,0,0,0,0,1,1,0,0,9,0,0,1,2,0,1},
{1,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1},
{1,0,0,0,0,1,2,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,1,1,1,1},
{1,0,0,0,0,1,1,1,1,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,1},
{1,0,1,0,0,0,1,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,1},
{1,1,1,0,0,0,0,0,0,0,2,0,1,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,1},
{1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1},
{1,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,1},
{1,0,0,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,9,0,1,0,0,0,1,1,0,0,0,1},
{1,0,0,0,1,2,0,0,0,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1},
{1,0,0,0,1,0,0,1,1,0,0,0,0,0,0,0,1,1,0,2,1,0,1,0,0,0,0,0,0,1},
{1,0,9,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,0,0,0,0,0,0,1},
{1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1},
{1,0,1,1,1,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,1,1,0,9,0,0,0,0,0,1},
{1,0,0,0,1,1,0,0,0,1,1,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1},
{1,0,0,0,1,0,1,0,0,1,1,0,0,1,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1},
{1,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,1,0,0,1},
{1,1,1,0,0,1,0,0,0,0,0,1,2,1,0,0,9,0,1,0,0,1,0,0,0,0,1,0,0,1},
{1,0,1,1,0,1,1,0,0,0,0,1,0,1,0,0,0,1,1,0,0,0,1,0,0,0,0,1,0,1},
{1,0,0,0,0,0,1,1,1,0,1,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,1},
{1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,1,0,1,0,0,0,0,0,1},
{1,2,0,0,1,0,0,9,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,2,0,1},
{1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},

};



Map mapA(MapW1, MapH1), mapB(MapH2, MapW2), mapC(MapW3, MapH3), mapD(MapW4, MapH4); //haritaların tanımlandığı yer olmazsa map.h dan yeni ekle.

void SetMaps()
{
	mapA.setMap(map);
	mapB.setMap(map2);
	mapC.setMap(map3);
	mapD.setMap(map4);




}



int main() {

	int level = StartLevel;

	SetMaps();

	if (level == 1)
	{
		int winCondition = 0;
		mapA.placePlayer(1, 1);
		while (!mapA.getIsWon())
		{
			if (winCondition == 2)
			{
				mapA.setIsWon(true);
				break;

			}
			else
			{
				if (mapA.getSpecPile() == 2)
					winCondition++;

				mapA.update();
			}
		}
		if (mapA.getIsWon())
			level++;
	}

return 0;
}